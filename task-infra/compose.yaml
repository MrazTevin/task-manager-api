
services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task_api_app
    env_file:
      - .env
    environment:
      SPRING_DATA_SOURCE_URL: jdbc:postgresql://postgres_db:5432/${POSTGRES_DB}
      SPRING_DATA_SOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATA_SOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
       postgres_db:
         condition: service_healthy
    networks:
      - backend
      - host_access

  postgres_db:
    container_name: task_api_manager
    image: postgres:16
    ports:
      - "5433:5432"
    restart: always
    environment:
       POSTGRES_DB: ${POSTGRES_DB}
       POSTGRES_USER: ${POSTGRES_USER}
       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - backend
      - host_access
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata: {}

networks:
  backend:
    internal: true
  host_access:
    driver: bridge

